
 <<<<<<< HEAD

    Prakash-dev 
    
             GIT And GitHub Basic

                   git init

The git init command is used to create a new Git repository in a directory on your local machine. It initializes a new Git repository, which means that it creates the necessary files and directories that Git uses to keep track of changes in your code.


                  
                   git clone

Clone repo located at <repo> onto local machine. Original repo can be
located on the local filesystem or on a remote machine via HTTP or SSH.


                  
                   git config

In Git, the git config command is used to set or retrieve configuration settings that control the behavior of Git. These configuration settings can be global, applied to all repositories on your system, or local, applied to a specific repository.

Example- 1)git config --global user.name   -->>for showing the user name.
         2)git config --global user.name "Your Name"    -->To set the user name.
         3)git config --global user.email "Your Email Address"   -->To Set the Email Address
         4)git config --list    -->> to check the current configuration settings.
         5)git config --global core.editor "nano"   -->> To set your preferred text editor.
         6)gti config --global core.sshCommand "ssh -i /path/to/ssh/key"   -->>To configure Git to use a specific SSH key for authentication.
         7)git config --global init.defaultBranch main  -->>To set Git to always a use a specific branch.



                   
                   git commit -m

Commit the staged snapshot, but instead of launching
a text editor, use <message> as the commit message.
      

                  
                   git log

Display the entire commit history using the default format.
For customization see additional options.

 
                   
                   git status

List which files are staged, unstaged, and untracked.



                   git diff 

Show unstaged changes between your index and
working directory.



                   git revert
                   
Create new commit that undoes all of the changes made in
<commit>, then apply it to the current branch.



                   git reset
Remove <file> from the staging area, but leave the working directory
unchanged. This unstages a file without overwriting any changes.



                   git clean -n

 Shows which files would be removed from working directory.
Use the -f flag in place of the -n flag to execute the clean.



                   git reflog 

Show a log of changes to the local repository’s HEAD.
Add --relative-date flag to show date info or --all to show



                   git branch

List all of the branches in your repo. Add a <branch> argument to
create a new branch with the name <branch>.



                  git merge 

<branch> Merge <branch> into the current branch.



                  git remote add

Create a new connection to a remote repo. After adding a remote,
you can use <name> as a shortcut for <url> in other commands.



                  git fetch

Fetches a specific <branch>, from the repo. Leave off <branch>
to fetch all remote refs.



                  git pull

Fetch the specified remote’s copy of current branch and
immediately merge it into the local copy




                  git push 

Push the branch to <remote>, along with necessary commits and
objects. Creates named branch in the remote repo if it doesn’t exist.




                  git reset 

Reset staging area to match most recent commit,
but leave the working directory unchanged.




                  git stash
                  
Save modified and staged changes




                  git stash list
              
list stack-order of stashed file changes




                  git stash pop
write working from top of stash stack

              
              
              
                  git stash drop
              
discard the changes from top of stash stack



  
  
  
  Push in GitHub through Git
   
   git init

   git add .

   git status

   git commit -m"First commit"

   git remote add origin https://github.com/PrakashSDE/JavaScript-CodeGround.git

   git push -u origin master
   
   
   
   
   
   
   
   File Modified and Push in GitHub through Git              

   1) git status
   2) git commit -m "git.txt file updated"
   3) git add .
   4) git push origin master
                        






Error Problem


Error1:  

! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/PrakashSDE/Git-GitHub-Essentials.git'

Solution:

 git fetch origin master
 Then follow these steps to merge:
 git pull origin master
 git add .
 git commit -m 'your commit message'
 git push origin master






1) What is GIT?
GIT is a distributed version control system and source code management (SCM) system 
with an emphasis to handle small and large projects with speed and efficiency.


2) What is a repository in GIT?
A repository contains a directory named .git, where git keeps all of its metadata for the 
repository. The content of the .git directory are private to git.


3) What is the command you can use to write a commit message?
The command that is used to write a commit message is “git commit –a”. The –a on the 
command line instructs git to commit the new content of all tracked files that have been 
modified. You can use “git add<file>” before git commit –a if new files need to be committed 
for the first time.


4) What is the difference between GIT and SVN?
The difference between GIT and SVN is
a) Git is less preferred for handling extremely large files or frequently changing binary 
files while SVN can handle multiple projects stored in the same repository.
b) GIT does not support ‘commits’ across multiple branches or tags. Subversion allows 
the creation of folders at any location in the repository layout.
c) Gits are unchangeable, while Subversion allows committers to treat a tag as a 
branch and to create multiple revisions under a tag root.


5) What are the advantages of using GIT?
a) Data redundancy and replication
b) High availability
c) Only one.git directory per repository
d) Superior disk utilization and network performance
e) Collaboration friendly
f) Any sort of projects can use GIT


6) What language is used in GIT?
GIT is fast, and ‘C’ language makes this possible by reducing the overhead of runtimes 
associated with higher languages.

7) What is the function of ‘GIT PUSH’ in GIT?
‘GIT PUSH’ updates remote refs along with associated objects.


8) Why GIT better than Subversion?
GIT is an open source version control system; it will allow you to run ‘versions’ of a project, 
which show the changes that were made to the code overtime also it allows you keep the 
backtrack if necessary and undo those changes. Multiple developers can checkout, and 
upload changes and each change can then be attributed to a specific developer.


9) What is “Staging Area” or “Index” in GIT?
Before completing the commits, it can be formatted and reviewed in an intermediate area 
known as ‘Staging Area’ or ‘Index’.


10) What is GIT stash?
GIT stash takes the current state of the working directory and index and puts in on the stack 
for later and gives you back a clean working directory. So in case if you are in the middle of 
something and need to jump over to the other job, and at the same time you don’t want to 
lose your current edits then you can use GIT stash.


11) What is GIT stash drop?
When you are done with the stashed item or want to remove it from the list, run the git 
‘stash drop’ command. It will remove the last added stash item by default, and it can also 
remove a specific item if you include as an argument.


12) How will you know in GIT if a branch has been already merged into master?
Git branch—merged lists the branches that have been merged into the current branch
Git branch—-no merged lists the branches that have not been merged


13) What is the function of git clone?
The git clone command creates a copy of an existing Git repository. To get the copy of a 
central repository, ‘cloning’ is the most common way used by programmers.


14) What is the function of ‘git config’?
The ‘git config’ command is a convenient way to set configuration options for your Git 
installation. Behaviour of a repository, user info, preferences etc. can be defined through 
this command.


15) What does commit object contain?
a) A set of files, representing the state of a project at a given point of time
b) Reference to parent commit objects
c) An SHAI name, a 40 character string that uniquely identifies the commit object.


16) How can you create a repository in Git?
In Git, to create a repository, create a directory for the project if it does not exist, and then 
run command “git init”. By running this command .git directory will be created in the project 
directory, the directory does not need to be empty.


17) What is ‘head’ in git and how many heads can be created in a repository?
A ‘head’ is simply a reference to a commit object. In every repository, there is a default head 
referred as “Master”. A repository can contain any number of heads.


18) What is the purpose of branching in GIT?
The purpose of branching in GIT is that you can create your own branch and jump between 
those branches. It will allow you to go to your previous work keeping your recent work 
intact.


19) What is the common branching pattern in GIT?
The common way of creating branch in GIT is to maintain one as “Main“
branch and create another branch to implement new features. This pattern is particularly 
useful when there are multiple developers working on a single project.


20) How can you bring a new feature in the main branch?
To bring a new feature in the main branch, you can use a command “git merge” or “git pull 
command”.


21) What is a ‘conflict’ in git?
A ‘conflict’ arises when the commit that has to be merged has some change in one place, 
and the current commit also has a change at the same place. Git will not be able to predict 
which change should take precedence.


22) How can conflict in git resolved?
To resolve the conflict in git, edit the files to fix the conflicting changes and then add the 
resolved files by running “git add” after that to commit the repaired merge, run “git 
commit”. Git remembers that you are in the middle of a merger, so it sets the parents of the 
commit correctly.


23) To delete a branch what is the command that is used?
Once your development branch is merged into the main branch, you don’t need
development branch. To delete a branch use, the command “git branch –d [head]”.


24) What is another option for merging in git?
“Rebasing” is an alternative to merging in git.


25) What is the syntax for “Rebasing” in Git?
The syntax used for rebase is “git rebase [new-commit] “


26) What is the difference between ‘git remote’ and ‘git clone’?
‘git remote add’ just creates an entry in your git config that specifies a name for a particular 
URL. While, ‘git clone’ creates a new git repository by copying and existing one located at 
the URI.


27) What is GIT version control?
With the help of GIT version control, you can track the history of a collection of files and 
includes the functionality to revert the collection of files to another version. Each version 
captures a snapshot of the file system at a certain point of time. A collection of files and 
their complete history are stored in a repository.


28) Mention some of the best graphical GIT client for LINUX?
Some of the best GIT client for LINUX is
a) Git Cola
b) Git-g
c) Smart git
d) Giggle
e) Git GUI
f) qGit


29) What is Subgit? Why to use Subgit?
‘Subgit’ is a tool for a smooth, stress-free SVN to Git migration. Subgit is a solution for a 
company -wide migration from SVN to Git that is:
a) It is much better than git-svn
b) No requirement to change the infrastructure that is already placed
c) Allows to use all git and all sub-version features
d) Provides genuine stress –free migration experience.


30) What is the function of ‘git diff ’ in git?
‘git diff ’ shows the changes between commits, commit and working tree etc.


31) What is ‘git status’ is used for?
As ‘Git Status’ shows you the difference between the working directory and the index, it is 
helpful in understanding a git more comprehensively.


32) What is the difference between the ‘git diff ’and ‘git status’?
‘git diff’ is similar to ‘git status’, but it shows the differences between various commits and 
also between the working directory and index.


33) What is the function of ‘git checkout’ in git?
A ‘git checkout’ command is used to update directories or specific files in your working tree 
with those from another branch without merging it in the whole branch.


34) What is the function of ‘git rm’?
To remove the file from the staging area and also off your disk ‘git rm’ is used.


35) What is the function of ‘git stash apply’?
When you want to continue working where you have left your work, ‘git stash apply’ 
command is used to bring back the saved changes onto the working directory.


36) What is the use of ‘git log’?
To find specific commits in your project history- by author, date, content or history ‘git log’ is 
used.


37) What is ‘git add’ is used for?
‘git add’ adds file changes in your existing directory to your index.


38) What is the function of ‘git reset’?
The function of ‘Git Reset’ is to reset your index as well as the working directory to the state 
of your last commit.


39) What is git Is-tree?
‘git Is-tree’ represents a tree object including the mode and the name of each item and the 
SHA-1 value of the blob or the tree.


40) How git instaweb is used?
‘Git Instaweb’ automatically directs a web browser and runs webserver with an interface into 
your local repository.


41) What does ‘hooks’ consist of in git?
This directory consists of Shell scripts which are activated after running the corresponding 
Git commands. For example, git will try to execute the post-commit script after you run a 
commit.


42) Explain what is commit message?
Commit message is a feature of git which appears when you commit a change. Git provides 
you a text editor where you can enter the modifications made in commits.


43) How can you fix a broken commit?
To fix any broken commit, you will use the command “git commit—amend”. By running this 
command, you can fix the broken commit message in the editor.

The Data is Given form 








=======
>>>>>>> 79deff6cc26f3f3a0b86218430d6d8de155ed370
